HOST: https://sync.it.usf.edu/

--- MessageService API v1.0 ---
---
Welcome to the MessageService API documentation. All comments can be written in [Markdown](http://daringfireball.net/projects/markdown/syntax) syntax
---
--
Topics vs. Queues
The differences between topics and queues are often confused.  Here's a brief overview of how topics and queues work in MessageService and some examples of when to use each.

#Topics#
MessageService topics are similar to the publish and subscribe (pub/sub) topics available in JMS-based message services. In JMS, when you publish a message it is available to all the subscribers who are interested - so zero to many subscribers will receive a copy of the message.  Only active subscriptions at the time the message is created will get a copy.

New clients to a MessageService topic can request all existing messages instead just receiving any new messages that are created.  This allows new clients or clients that have been disconnected for an extended period to "catch up" to the current state.  Once the client has caught up they can request time-based deltas - all messages created after a specific date/time.   

###Sample Uses for Topics###
* Any data that needs to be acted on or tracked by multiple people or processes
* Tracking creation/changes of specific values: (First/Last Name, NetID, Unumber, etc)
* Logging
 
#Queues#
Messages sent to queues will be read by exactly one client. When a message is written to a queue , the status is set to 'pending'.  When it is read by a client, the status is changed to 'in-progress'.  It is the responsibility of the client to acknowledge the receipt and processing of the message and delete it from the queue.

###Sample Uses for Queues###
* Volatile data that needs to be processed in a short time (webservice requests, notifications, etc)
* Data that can be safely discarded once processed
* Breaking batch processes into smaller, atomic actions which can be done in parallel on mutiple clients 
--

--
Topics
Listing, creating, modifying and deleting topics in MessageService
--
List all topics
GET /MessageService/basic/topic
< 200
< Content-Type: application/json
{ "count":4,
  "topics": [
    { "name":"TestTopic1" }, { "name":"TestTopic2" }, { "name":"TestTopic3" }, { "name":"netidChange" }
    ]    
}


Filtered list of topics.
#####URL Parameters#####
* `pattern` - Regular Expression
GET /MessageService/basic/topic?pattern=^(netid).*
< 200
< Content-Type: application/json
{ "count":1,
  "topics": [
    { "name":"netidChange" }
    ]    
}


Create a new topic
#####JSON Parameters#####
* `name` - Topic to create
* `permissions.canRead` - List of users who can read messages in this topic
* `permissions.canWrite` - List of users who can write messages to this topic
* `permissions.canAdmin` - List of users who can delete, rename or change the permissions for this topic

**Note: The user creating the topic and the super admin (it-msgsvcadm) are automatically added to all permission lists**
POST /MessageService/basic/topic
> Content-Type: application/json
{ "messageData": { "name": "MyNewTopic", "permissions": { "canRead": ["user1","user2"], "canWrite":["user2"], "canAdmin":["user1"]}}
< 200
< Content-Type: application/json
{ "count":1,
  "topics": { "name": "MyNewTopic" }  
}

Change the name of a topic
#####JSON Parameters#####
* `name` - New topic name
PUT /MessageService/basic/topic/TestTopic1
> Content-Type: application/json
{ "messageData": { 
    "name": "NewNameForTopic1"
}
< 200
< Content-Type: application/json
{ "count":1,
  "topics": { "name": "NewNameForTopic1" }  
}

Change the permission lists for a topic
#####JSON Parameters#####
Like the creation of a topic, three types of permissions can be set:

* `permissions.canRead` - List of users who can read messages in this topic
* `permissions.canWrite` - List of users who can write messages to this topic
* `permissions.canAdmin` - List of users who can delete, rename or change the permissions for this topic

Each permission contains two lists: `add` and `remove`, which contain the usernames to add or remove from the permission list 
PUT /MessageService/basic/topic/MyNewTopic
> Content-Type: application/json
{ "messageData":{ 
    "permissions": {
        "canRead": {
            "add": ["user3","user4"], 
            "remove": ["user2"] 
        },
        "canWrite": {
            "add": ["user3"],
            "remove":["user2"]
        },
        "canAdmin": {
            "add": [],
            "remove":[]
        }
    }
  }
}
< 200
< Content-Type: application/json
{ 
    "canRead": { 
        "add": 2,
        "remove":1 
    }, 
    "canWrite": {
        "add": 1,
        "remove": 1
    }, 
    "canAdmin": {
        "add": 0,
        "remove": 0
    }
}

Delete a topic
DELETE /MessageService/basic/topic/TestTopic2
< 200
< Content-Type: application/json
{ "count":1,
  "topics": { "name": "TestTopic2" }  
}

--
Topic Messages
Reading from and writing to a MessageService topic
--
List all messages from a topic
GET /MessageService/basic/topic/TestTopic3
< 200
< Content-Type: application/json
{"count":3,
    "messages": [ 
      { 
        "id": "51267478e4b0baf4a4ec141b",
		"creator": "user1",
		"messageDetails": {
			"messageContainer": {
				"type": "topic",
				"id": "50ed8ad7e4b0b1e6ecbeea9e",
				"name": "TestTopic3"
			}
		},
		"apiVersion": "1",
		"createTime": "2013-01-01T19:24:40Z",
		"createProg": "edu:usf:cims:grails:SampleApp",
		"messageData": {
			"foo": "Hello World",
			"days": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
		}
	  },
	  {
	  	"id": "51267b77e4b0738764c05940",
	  	"creator": "user2",
	  	"messageDetails": {
	  		"messageContainer": {
	  			"type": "topic",
	  			"id": "50ed8ad7e4b0b1e6ecbeea9e",
	  			"name": "TestTopic3"
	  		}
	  	},
	  	"apiVersion": "1",
	  	"createTime": "2013-02-01T19:54:31Z",
	  	"createProg": "edu:usf:cims:grails:SampleApp",
	  	"messageData": {
	  		"foo": "bar",
	  		"days": ["Monday", "Tuesday"]
	  	}
	  },
	  {
	  	"id": "51267b77e4b0738764c05941",
	  	"creator": "user1",
	  	"messageDetails": {
	  		"messageContainer": {
	  			"type": "topic",
	  			"id": "50ed8ad7e4b0b1e6ecbeea9e",
	  			"name": "TestTopic3"
	  		}
	  	},
	  	"apiVersion": "1",
	  	"createTime": "2013-03-01T19:54:31Z",
	  	"createProg": "edu:usf:cims:grails:SampleApp",
	  	"messageData": {
	  		"foo": "blah",
	  		"days": ["Sunday", "Wednesday"]
	  	}
	  }
	]
}


Return list of messages filtered by create time
#####URL Parameters#####
* `startTime` - Return messages created **after** this date/time.  Format is *YYYY-MM-DD'T'HH:MM:SS* (Required)
* `endTime` - Return message created **before** this date/time.  Format is *YYYY-MM-DD'T'HH:MM:SS* (Optional)

**NOTE: All dates are in GMT!**
GET /MessageService/basic/topic/TestTopic3/filter?startTime=2013-01-01T00:00:00&endTime=2013-02-28T23:59:59
< 200
< Content-Type: application/json
{"count":2,
    "messages": [ 
      { 
		"id": "51267478e4b0baf4a4ec141b",
		"creator": "user1",
		"messageDetails": {
			"messageContainer": {
				"type": "topic",
				"id": "50ed8ad7e4b0b1e6ecbeea9e",
				"name": "TestTopic3"
			}
		},
		"apiVersion": "1",
		"createTime": "2013-01-01T19:24:40Z",
		"createProg": "edu:usf:cims:grails:SampleApp",
		"messageData": {
			"foo": "Hello World",
			"days": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
		}
	  },
	  {
	  	"id": "51267b77e4b0738764c05940",
	  	"creator": "user2",
	  	"messageDetails": {
	  		"messageContainer": {
	  			"type": "topic",
	  			"id": "50ed8ad7e4b0b1e6ecbeea9e",
	  			"name": "TestTopic3"
	  		}
	  	},
	  	"apiVersion": "1",
	  	"createTime": "2013-02-01T19:54:31Z",
	  	"createProg": "edu:usf:cims:grails:SampleApp",
	  	"messageData": {
	  		"foo": "bar",
	  		"days": ["Monday", "Tuesday"]
	  	}
	  }
	]
}

Create a new topic message
#####JSON Parameters#####
* `apiVersion` - MessageService API version this message is using.  Currently, the only valid value is "1" 
* `createProg` - String or URN that uniquely identifies the program writing this message.
* `messageData` - Message content

POST /MessageService/basic/topic/TestTopic3
> Content-Type: application/json
{
    "apiVersion"  : "1",
    "createProg" : "io:apiary:ericpierce:doc",
    "messageData" : {
        "hello" : "world",
        "foo" : "bar"
    }     
}
< 200
< Content-Type: application/json
{
    "id"  : "50ed8b12e4b0b1e6ecbeea9f",
    "apiVersion"  :  "1",    
    "creator"  :  "epierce",
    "createTime" : "2013-03-26T19:55:41Z",  
    "createProg" : "io:apiary:ericpierce:doc",
    "messageDetails" : {
      	"messageContainer": {
	  		"type": "topic",
	  		"id": "50ed8ad7e4b0b1e6ecbeea9e",
	  		"name": "TestTopic3"
	  	}
    },
    "messageData" : {
        "hello" : "world",
        "foo" : "bar"
    }    
}

--
Queues
Listing, creating, modifying and deleting queues in MessageService
--
List all queues
GET /MessageService/basic/queue
< 200
< Content-Type: application/json
{ "count":4,
  "topics": [
    { "name":"TestQueue1" }, { "name":"TestQueue2" }, { "name":"TestQueue3" }, { "name":"AccountChanges" }
    ]    
}


Filtered list of queues
#####URL Parameters#####
* `pattern` - Regular Expression
GET /MessageService/basic/queue?pattern=^(Account).*
< 200
< Content-Type: application/json
{ "count":1,
  "topics": [
    { "name":"AccountChanges" }
    ]    
}


Create a new queue
#####JSON Parameters#####
* `name` - Queue to create
* `permissions.canRead` - List of users who can read messages in this queue
* `permissions.canWrite` - List of users who can write messages to this queue
* `permissions.canAdmin` - List of users who can delete, rename or change the permissions for this queue

**Note: The user creating the queue and the super admin (it-msgsvcadm) are automatically added to all permission lists**
POST /MessageService/basic/queue
> Content-Type: application/json
{ "messageData": { "name": "MyNewQueue", "permissions": { "canRead": ["user1","user2"], "canWrite":["user2"], "canAdmin":["user1"]}}
< 200
< Content-Type: application/json
{ "count":1,
  "topics": { "name": "MyNewQueue" }  
}

Change the name of a queue
#####JSON Parameters#####
* `name` - New queue name
PUT /MessageService/basic/queue/TestQueue1
> Content-Type: application/json
{ "messageData": { 
    "name": "NewNameForQueue1"
}
< 200
< Content-Type: application/json
{ "count":1,
  "topics": { "name": "NewNameForQueue1" }  
}

Change the permission lists for a queue
#####JSON Parameters#####
Like the creation of a queue, three types of permissions can be set:

* `permissions.canRead` - List of users who can read messages in this queue
* `permissions.canWrite` - List of users who can write messages to this queue
* `permissions.canAdmin` - List of users who can delete, rename or change the permissions for this queue

Each permission contains two lists: `add` and `remove`, which contain the usernames to add or remove from the permission list 
PUT /MessageService/basic/queue/MyNewQueue
> Content-Type: application/json
{ "messageData":{ 
    "permissions": {
        "canRead": {
            "add": ["user3","user4"], 
            "remove": ["user2"] 
        },
        "canWrite": {
            "add": ["user3"],
            "remove":["user2"]
        },
        "canAdmin": {
            "add": [],
            "remove":[]
        }
    }
  }
}
< 200
< Content-Type: application/json
{ 
    "canRead": { 
        "add": 2,
        "remove":1 
    }, 
    "canWrite": {
        "add": 1,
        "remove": 1
    }, 
    "canAdmin": {
        "add": 0,
        "remove": 0
    }
}

Delete a topic
DELETE /MessageService/basic/queue/TestQueue2
< 200
< Content-Type: application/json
{ "count":1,
  "topics": { "name": "TestQueue2" }  
}

--
Queue Messages
Reading from and writing to a MessageService queue
--
Get a message from a queue
This returns the oldest message with in **pending** status and changes the status to **in-progress**
GET /MessageService/basic/queue/AccountChanges
< 200
< Content-Type: application/json
{ "count": 1,
  "messages" : [
    {
      "messageData" : {
        "host" : "shell.example.edu",
        "username" : "jsmith",
        "accountStatus" : "locked"
      },
      "status" : "in-progress",
      "id" : "50febc71e4b009d677459193",
      "createProg" : "edu:example:shell:account_admin",
      "messageDetails" : {
        "taken" : {
          "date" : "2013-01-23T15:27:48Z",
          "ipAddress" : "127.0.0.1",
          "user" : "it-serviceAdmin"
        },
        "messageContainer" : {
          "id" : "50f6adb1e4b04c46f04c66ea",
          "type" : "queue",
          "name" : "AccountChanges"
        }
      },
      "creator" : "it-accountAdmin",
      "apiVersion" : "1",
      "createTime" : "2013-01-22T16:21:05Z"
    }
  ]
}


*Peek* - View a list of **pending** messages without changing their status
#####URL Parameters#####
* `count` - Return a maximum of this many messages (default = 10)

GET /MessageService/basic/topic/AccountChanges/peek?count=2
< 200
< Content-Type: application/json
{"count": 2,
    "messages": [ 
      { 
		"id": "51267478e4b0baf4a5ec143c",
		"creator": "it-accountAdmin",
        "status" : "pending",
		"messageDetails": {
			"messageContainer": {
				"type": "queue",
				"id": "50f6adb1e4b04c46f04c66ea",
				"name": "AccountChanges"
			}
		},
		"apiVersion": "1",
		"createTime": "2013-01-01T19:24:40Z",
		"createProg": "edu:example:shell:account_admin",
		"messageData": {
			"host" : "shell.example.edu",
            "username" : "jdoe",
            "accountStatus" : "deleted"
		}
	  },
	  {
	  	"id": "51267b77e4b0738764c05940",
	  	"creator": "user2",
	  	"messageDetails": {
	  		"messageContainer": {
	  			"type": "topic",
	  			"id": "50ed8ad7e4b0b1e6ecbeea9e",
	  			"name": "TestTopic3"
	  		}
	  	},
	  	"apiVersion": "1",
	  	"createTime": "2013-02-01T19:54:31Z",
	  	"createProg": "edu:usf:cims:grails:SampleApp",
	  	"messageData": {
    		"host" : "shell.example.edu",
            "username" : "davis",
            "accountStatus" : "active"
	  	}
	  }
	]
}

View list of **in-progress** messages
GET /MessageService/basic/queue/AccountChanges/in-progress
< 200
< Content-Type: application/json
{ "count": 3,
  "messages" : [
    {
      "messageData" : {
        "host" : "shell.example.edu",
        "username" : "jsmith",
        "accountStatus" : "locked"
      },
      "status" : "in-progress",
      "id" : "50febc71e4b009d677459193",
      "createProg" : "edu:example:shell:account_admin",
      "messageDetails" : {
        "taken" : {
          "date" : "2013-01-23T15:27:48Z",
          "ipAddress" : "127.0.0.1",
          "user" : "it-serviceAdmin"
        },
        "messageContainer" : {
          "id" : "50f6adb1e4b04c46f04c66ea",
          "type" : "queue",
          "name" : "AccountChanges"
        }
      },
      "creator" : "it-accountAdmin",
      "apiVersion" : "1",
      "createTime" : "2013-01-22T16:21:05Z"
    },
    {
      "messageData" : {
        "host" : "shell.example.edu",
        "username" : "simpson",
        "accountStatus" : "active"
      },
      "status" : "in-progress",
      "id" : "50febc71e4b009d677459194",
      "createProg" : "edu:example:shell:account_admin",
      "messageDetails" : {
        "taken" : {
          "date" : "2013-01-23T15:27:48Z",
          "ipAddress" : "127.0.0.1",
          "user" : "it-serviceAdmin"
        },
        "messageContainer" : {
          "id" : "50f6adb1e4b04c46f04c66ea",
          "type" : "queue",
          "name" : "AccountChanges"
        }
      },
      "creator" : "it-accountAdmin",
      "apiVersion" : "1",
      "createTime" : "2013-01-22T16:21:05Z"
    },
    {
      "messageData" : {
        "host" : "shell.example.edu",
        "username" : "capone",
        "accountStatus" : "locked"
      },
      "status" : "in-progress",
      "id" : "50febc71e4b009d677459193",
      "createProg" : "edu:example:shell:account_admin",
      "messageDetails" : {
        "taken" : {
          "date" : "2013-01-23T15:27:48Z",
          "ipAddress" : "127.0.0.1",
          "user" : "it-serviceAdmin"
        },
        "messageContainer" : {
          "id" : "50f6adb1e4b04c46f04c66ea",
          "type" : "queue",
          "name" : "AccountChanges"
        }
      },
      "creator" : "it-accountAdmin",
      "apiVersion" : "1",
      "createTime" : "2013-01-22T16:21:05Z"
    }
  ]
}

Create a new queue message
#####JSON Parameters#####
* `apiVersion` - MessageService API version this message is using.  Currently, the only valid value is "1" 
* `createProg` - String or URN that uniquely identifies the program writing this message.
* `messageData` - Message content

POST /MessageService/basic/queue/AccountChanges
> Content-Type: application/json
{
    "apiVersion"  : "1",
    "createProg" : "edu:example:shell:account_admin",
    "messageData" : {
        "host" : "shell.example.edu",
        "username" : "wilson",
        "accountStatus" : "deleted"
    }     
}
< 200
< Content-Type: application/json
{
    "id"  : "50ed8b12e4b0b1e6ecbeea9f",
    "apiVersion"  :  "1",    
    "creator"  :  "epierce",
    "createTime" : "2013-03-26T19:55:41Z",  
    "createProg" : "io:apiary:ericpierce:doc",
    "status" : "pending",
    "messageDetails" : {
      	"messageContainer": {
	  		"type": "queue",
	  		"id": "50f6adb1e4b04c46f04c66ea",
	  		"name": "AccountChanges"
	  	}
    },
    "messageData" : {
        "host" : "shell.example.edu",
        "username" : "wilson",
        "accountStatus" : "deleted"
    }    
}

Change the status of a queue message
#####JSON Parameters#####
* `messageData.status` - New message status
PUT /MessageService/basic/queue/AccountChanges/50febc71e4b009d677459193
> Content-Type: application/json
{ "messageData": { 
    "status": "pending"
}
< 200
< Content-Type: application/json
{ "count": 1,
  "messages" : [
    {
      "messageData" : {
        "host" : "shell.example.edu",
        "username" : "jsmith",
        "accountStatus" : "locked"
      },
      "status" : "pending",
      "id" : "50febc71e4b009d677459193",
      "createProg" : "edu:example:shell:account_admin",
      "messageDetails" : {
        "taken" : {
          "date" : "2013-01-23T15:27:48Z",
          "ipAddress" : "127.0.0.1",
          "user" : "it-serviceAdmin"
        },
        "messageContainer" : {
          "id" : "50f6adb1e4b04c46f04c66ea",
          "type" : "queue",
          "name" : "AccountChanges"
        }
      },
      "creator" : "it-accountAdmin",
      "apiVersion" : "1",
      "createTime" : "2013-01-22T16:21:05Z"
    }
  ]
}

Delete a queue message.  
**You must delete a message after processing the message content!** 
DELETE /MessageService/basic/queue/AccountChanges/50febc71e4b009d677459193
< 200
< Content-Type: application/json
{ "count": 1,
  "messages" : [
    {
      "messageData" : {
        "host" : "shell.example.edu",
        "username" : "jsmith",
        "accountStatus" : "locked"
      },
      "status" : "pending",
      "id" : "50febc71e4b009d677459193",
      "createProg" : "edu:example:shell:account_admin",
      "messageDetails" : {
        "taken" : {
          "date" : "2013-01-23T15:27:48Z",
          "ipAddress" : "127.0.0.1",
          "user" : "it-serviceAdmin"
        },
        "messageContainer" : {
          "id" : "50f6adb1e4b04c46f04c66ea",
          "type" : "queue",
          "name" : "AccountChanges"
        }
      },
      "creator" : "it-accountAdmin",
      "apiVersion" : "1",
      "createTime" : "2013-01-22T16:21:05Z"
    }
  ]
}